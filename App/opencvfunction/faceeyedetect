{"effect":[
	{"line": "def faceeyeDetect()::\n"},
	{"line": "\t## Image file reading\n"},
	{"line": "\timage = cv2.imread('imgOriginal.jpg', cv2.IMREAD_COLOR)\n"},
	{"line": "\n "},
	{"line": "\t## Applying Face and Eye Detection algorithm to image\n"},
	{"line": "\tface_cascade = cv2.CascadeClassifier('opencvfiles/haarcascades/haarcascade_frontalface_default.xml')\n"},
	{"line": "\teye_cascade = cv2.CascadeClassifier('opencvfiles/haarcascades/haarcascade_eye.xml')\n"},
	{"line": "\tgray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)\n"},
	{"line": "\tfaces = face_cascade.detectMultiScale(gray, 1.3, 5)\n"},
	{"line": "\tfor (x,y,w,h) in faces:\n"},
	{"line": "\t    cv2.rectangle(img,(x,y),(x+w,y+h),(255,0,0),10)\n"},
	{"line": "\t    roi_gray = gray[y:y+h, x:x+w]\n"},
	{"line": "\t    roi_color = img[y:y+h, x:x+w]\n"},
	{"line": "\t    eyes = eye_cascade.detectMultiScale(roi_gray)\n"},
	{"line": "\t    for (ex,ey,ew,eh) in eyes:\n"},
	{"line": "\t        cv2.rectangle(roi_color,(ex,ey),(ex+ew,ey+eh),(0,255,0),10)\n"},
	{"line": "\n"},
	{"line": "\t## Escrita da imagem\n"},
	{"line": "\tcv2.imwrite('imgProcessed.jpg',processed)"}
]}
